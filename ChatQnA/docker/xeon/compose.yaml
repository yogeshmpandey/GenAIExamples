# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

services:
  pgvector-vector-db:
    hostname: db
    container_name: pgvector-vector-db
    image: pgvector/pgvector:0.7.0-pg16
    ports:
      - "5432:5432"
    restart: always
    ipc: host
    environment:
      - POSTGRES_DB=vectordb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpwd
      - POSTGRES_HOST_AUTH_METHOD=trust
      - no_proxy= ${no_proxy}
      - http_proxy= ${http_proxy}
      - https_proxy= ${https_proxy}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  dataprep-pgvector:
    image: opea/dataprep-pgvector:comps
    container_name: dataprep-pgvector
    ports:
      - "6007:6007"
    ipc: host
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      PG_CONNECTION_STRING: ${PG_CONNECTION_STRING}
      INDEX_NAME: ${INDEX_NAME}
      HUGGINGFACEHUB_API_TOKEN: ${HUGGINGFACEHUB_API_TOKEN}
      TEI_ENDPOINT: ${TEI_ENDPOINT}
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY}
    restart: unless-stopped

  tei-embedding-service:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.5
    container_name: tei-embedding-server
    ports:
      - "6006:80"
    volumes:
      - "./data:/data"
    shm_size: 1g
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
    command: --model-id ${EMBEDDING_MODEL_ID} --auto-truncate

  embedding:
    image: ${REGISTRY:-opea}/embedding-tei:${TAG:-latest}
    container_name: embedding-tei-server
    depends_on:
      - tei-embedding-service
    ports:
      - "6000:6000"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      TEI_EMBEDDING_ENDPOINT: ${TEI_EMBEDDING_ENDPOINT}
    restart: unless-stopped

  retriever:
    image: opea/retriever-pgvector:comps
    container_name: retriever-pgvector
    ports:
      - "7000:7000"
    ipc: host
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      PG_CONNECTION_STRING: ${PG_CONNECTION_STRING}
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY}
    restart: unless-stopped

  tei-reranking-service:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.5
    container_name: tei-reranking-server
    ports:
      - "8808:80"
    volumes:
      - "./data:/data"
    shm_size: 1g
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      HUGGINGFACEHUB_API_TOKEN: ${HUGGINGFACEHUB_API_TOKEN}
      HF_HUB_DISABLE_PROGRESS_BARS: 1
      HF_HUB_ENABLE_HF_TRANSFER: 0
    command: --model-id ${RERANK_MODEL_ID} --auto-truncate
  reranking:
    image: ${REGISTRY:-opea}/reranking-tei:${TAG:-latest}
    container_name: reranking-tei-xeon-server
    depends_on:
      - tei-reranking-service
    ports:
      - "8000:8000"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      TEI_RERANKING_ENDPOINT: ${TEI_RERANKING_ENDPOINT}
      HUGGINGFACEHUB_API_TOKEN: ${HUGGINGFACEHUB_API_TOKEN}
      HF_HUB_DISABLE_PROGRESS_BARS: 1
      HF_HUB_ENABLE_HF_TRANSFER: 0
    restart: unless-stopped
  vllm-service:
    image: vllm-openvino:comps
    container_name: vllm-openvino-server
    ports:
      - "9009:80"
    volumes:
      - "./data:/data"
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      HF_TOKEN: ${HUGGINGFACEHUB_API_TOKEN}
      HABANA_VISIBLE_DEVICES: all
      OMPI_MCA_btl_vader_single_copy_mechanism: none
      LLM_MODEL: ${LLM_MODEL}
    cap_add:
      - SYS_NICE
    ipc: host
    command: /bin/bash -c "export VLLM_CPU_KVCACHE_SPACE=40 && python3 -m vllm.entrypoints.openai.api_server --enforce-eager --model $LLM_MODEL --tensor-parallel-size 1 --host 0.0.0.0 --port 80"

    #command: /bin/bash -c "export VLLM_CPU_KVCACHE_SPACE=40 && python3 -m vllm.entrypoints.openai.api_server --enforce-eager --model $LLM_MODEL --chat-template /workspace/vllm/examples/template_chatml.jinja --host 0.0.0.0 --port 80"

  llm:
    image: opea/llm-vllm:latest
    container_name: llm-vllm-server
    depends_on:
      - vllm-service
    ports:
      - "9000:9000"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      vLLM_ENDPOINT: ${vLLM_ENDPOINT}
      HUGGINGFACEHUB_API_TOKEN: ${HUGGINGFACEHUB_API_TOKEN}
      LLM_MODEL: ${LLM_MODEL}
    restart: unless-stopped

  chaqna-xeon-backend-server:
    image: ${REGISTRY:-opea}/chatqna:${TAG:-latest}
    container_name: chatqna-xeon-backend-server
    depends_on:
      - redis-vector-db
      - tei-embedding-service
      - embedding
      - dataprep-redis-service
      - retriever
      - tei-reranking-service
      - reranking
      - tgi-service
      - llm
    ports:
      - "8888:8888"
    environment:
      - no_proxy=${no_proxy}
      - https_proxy=${https_proxy}
      - http_proxy=${http_proxy}
      - MEGA_SERVICE_HOST_IP=${MEGA_SERVICE_HOST_IP}
      - EMBEDDING_SERVICE_HOST_IP=${EMBEDDING_SERVICE_HOST_IP}
      - RETRIEVER_SERVICE_HOST_IP=${RETRIEVER_SERVICE_HOST_IP}
      - RERANK_SERVICE_HOST_IP=${RERANK_SERVICE_HOST_IP}
      - LLM_SERVICE_HOST_IP=${LLM_SERVICE_HOST_IP}
    ipc: host
    restart: always
  chaqna-xeon-ui-server:
    image: ${REGISTRY:-opea}/chatqna-ui:${TAG:-latest}
    container_name: chatqna-xeon-ui-server
    depends_on:
      - chaqna-xeon-backend-server
    ports:
      - "5173:5173"
    environment:
      - no_proxy=${no_proxy}
      - https_proxy=${https_proxy}
      - http_proxy=${http_proxy}
      - CHAT_BASE_URL=${BACKEND_SERVICE_ENDPOINT}
      - UPLOAD_FILE_BASE_URL=${DATAPREP_SERVICE_ENDPOINT}
      - GET_FILE=${DATAPREP_GET_FILE_ENDPOINT}
      - DELETE_FILE=${DATAPREP_DELETE_FILE_ENDPOINT}
    ipc: host
    restart: always
  chaqna-xeon-conversation-ui-server:
    image: opea/chatqna-conversation-ui:latest
    container_name: chatqna-xeon-conversation-ui-server
    environment:
      - APP_BACKEND_SERVICE_ENDPOINT=${BACKEND_SERVICE_ENDPOINT}
      - APP_DATA_PREP_SERVICE_URL=${DATAPREP_SERVICE_ENDPOINT}
    ports:
      - "5174:80"
    depends_on:
      - chaqna-xeon-backend-server
    ipc: host
    restart: always
networks:
  default:
    driver: bridge
